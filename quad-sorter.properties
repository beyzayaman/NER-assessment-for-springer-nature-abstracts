# download and extraction target dir
base-dir=/home/chile/DBpedia/SciGraph

# use only directories that contain a 'download-complete' file? Default is false.
#require-download-complete=true

# script for the moment ony works for single languages
languages=de

# if ontology and mapping files are not given or do not exist, download info from mappings.dbpedia.org
# ontology=see universal.properties
# mappings=see universal.properties

# Serialization URI policies and file formats. Quick guide:
# uri-policy keys: uri, generic, xml-safe, reject-long
# uri-policy position modifiers: -subjects, -predicates, -objects, -datatypes, -contexts
# uri-policy values: comma-separated languages or '*' for all languages
# format values: n-triples, n-quads, turtle-triples, turtle-quads, trix-triples, trix-quads
# See http://git.io/DBpedia-serialization-format-properties for details.

# For backwards compatibility, en uses generic URIs. All others use local IRIs.
# uri-policy.uri=uri:en; generic:en; xml-safe-predicates:*; reject-long:*

# NT is unreadable anyway - might as well use URIs for en
# format.nt.bz2=n-triples;uri-policy.uri
# format.nq.bz2=n-quads;uri-policy.uri

# see universal.properties
# Turtle is much more readable - use nice IRIs for all languages
# format.ttl.bz2=turtle-triples;uri-policy.iri
# format.tql.bz2=turtle-quads;uri-policy.iri

#suffix of the input file, use quad files!
suffix=.nt.bz2

input-datasets=springernature-scigraph-2016-articles.2017-02-15

  #springernature-scigraph-2016-articles.2017-02-15


# Turtle is much more readable - use nice IRIs for all languages
format.ttl.bz2=turtle-triples
format.nt.bz2=turtle-triples
format.tql=turtle-quads
format.ttl=turtle-triples
#format.tql.bz2=turtle-quads